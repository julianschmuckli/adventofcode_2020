TYPES: BEGIN OF t_input,
         row TYPE string,
       END OF t_input.

* Input declaration
DATA: lv_input TYPE TABLE OF t_input,
      wa_input LIKE LINE OF lv_input.

* Assign with the puzzle input.
lv_input = VALUE #(
 ( row = 'FBBFBBBRLR' )
 ( row = 'BFFBBFFLLL' )
 ( row = 'BFFBBBBRRR' )
 ( row = 'BBBFBBFRLL' )
 ( row = 'FFBFFFFLRL' )
 ( row = 'FFBFBBBLLL' )
 ( row = 'BFFBBFBLLL' )
 ( row = 'FBFFFFBLLL' )
 ( row = 'FBBBBBBRLL' )
 ( row = 'BBFFBBFLLR' )
 ( row = 'FFBFBBBLRL' )
 ( row = 'FFBBBBFLLL' )
 ( row = 'FBBFFBBRLL' )
 ( row = 'BFBFFFFRLR' )
 ( row = 'BFBBFBBLLL' )
 ( row = 'FBFFBBBRRR' )
 ( row = 'BBFBFBFLRR' )
 ( row = 'FFBBFFFRRR' )
 ( row = 'BBFFBBFLRL' )
 ( row = 'FBFBBBBLRR' )
 ( row = 'BFFFBFBLRL' )
 ( row = 'FBFFBFFLLR' )
 ( row = 'FFFBFBBRLR' )
 ( row = 'BFFBBBFRLR' )
 ( row = 'BFFBFFFLLR' )
 ( row = 'FFBBBFFLLL' )
 ( row = 'BBBFBBFRRL' )
 ( row = 'BBFBFBFRLR' )
 ( row = 'BFBFFBBRRL' )
 ( row = 'BFFFFFFRLR' )
 ( row = 'FBFBFBBLLL' )
 ( row = 'BFFFBBFRLR' )
 ( row = 'FBFBBBBRRR' )
 ( row = 'BFBFBFBRLR' )
 ( row = 'BBBFFBBLRL' )
 ( row = 'FBFFBFBRLR' )
 ( row = 'FBBBBBFLLR' )
 ( row = 'FFBBBFBRRL' )
 ( row = 'BFFBBFBRLL' )
 ( row = 'BBFFBFFLLL' )
 ( row = 'BFBFBBBLRL' )
 ( row = 'FFBBBFBRRR' )
 ( row = 'FFBBBBBRLL' )
 ( row = 'BFBFBBFLRR' )
 ( row = 'FFBFFBBLRR' )
 ( row = 'BBBFBFFLRL' )
 ( row = 'BBFBBBFLLL' )
 ( row = 'BFBBFFFRLL' )
 ( row = 'FBFBFBFRRR' )
 ( row = 'BBFFBFFLRR' )
 ( row = 'FBFBFBBRRL' )
 ( row = 'BBFFBFFRLR' )
 ( row = 'BBFFFFBRRL' )
 ( row = 'FBFBBBFRLL' )
 ( row = 'BFFFBBFRRR' )
 ( row = 'BFBFBFFLLL' )
 ( row = 'BBFBBFFRRR' )
 ( row = 'FFBBFFBLRR' )
 ( row = 'BFBBFBBRLR' )
 ( row = 'FFFBFBBLLR' )
 ( row = 'FBBFBBFLLR' )
 ( row = 'BBBFBFBRRL' )
 ( row = 'BFBBBFFRLR' )
 ( row = 'BBBFBFBRLL' )
 ( row = 'BBFBBBFLLR' )
 ( row = 'BBFFBFFRRL' )
 ( row = 'FFBFBBBLLR' )
 ( row = 'FFBFBBFLRR' )
 ( row = 'FBBFFBFRLL' )
 ( row = 'BBBFFFBLLL' )
 ( row = 'BBFBFBBLLL' )
 ( row = 'BFFBFBBLRL' )
 ( row = 'BBFFBFBRRR' )
 ( row = 'FFFBFBBRRR' )
 ( row = 'FBFBFFFRRR' )
 ( row = 'FFFBBBBRRR' )
 ( row = 'BFFBBFFRRL' )
 ( row = 'FFBBBFBLRL' )
 ( row = 'BFBBFBFLRL' )
 ( row = 'FFFBBFFLLL' )
 ( row = 'FBBBBFBLLR' )
 ( row = 'FBBBFFBLRL' )
 ( row = 'FBFBFFBLRR' )
 ( row = 'FFBFBFFLLR' )
 ( row = 'BFFFFFFLRL' )
 ( row = 'BFFFBBBLRR' )
 ( row = 'BBBFBFFLLL' )
 ( row = 'BFFFBBFRLL' )
 ( row = 'FBFFFFFRRR' )
 ( row = 'BBFFBBFRLR' )
 ( row = 'FBBFFFFRLL' )
 ( row = 'FBBFBFFLLR' )
 ( row = 'FBBFFFFRLR' )
 ( row = 'BBFFBBBRLL' )
 ( row = 'BFFBFFFRLR' )
 ( row = 'FFBBFBBLLL' )
 ( row = 'BFBFBFBRRL' )
 ( row = 'BFFFBBFLRL' )
 ( row = 'FFBBFFBLRL' )
 ( row = 'FBFFFFFRLR' )
 ( row = 'BFFBBBBRLL' )
 ( row = 'BBFBBBFRLL' )
 ( row = 'BBBFFBFRRR' )
 ( row = 'FBBBBBFLRL' )
 ( row = 'FFBFBBFRRR' )
 ( row = 'BFFFFFBLRL' )
 ( row = 'FBFBFFFRLL' )
 ( row = 'BFFFBBBRLR' )
 ( row = 'BFFFBBBRRR' )
 ( row = 'FFBBBBBRLR' )
 ( row = 'BFFFBBFLLR' )
 ( row = 'BFBBBFBLRR' )
 ( row = 'BBFFFFFLRR' )
 ( row = 'FBBFFBFRRL' )
 ( row = 'FFBBBBBLLL' )
 ( row = 'FBBBBFBLRL' )
 ( row = 'BFBFFBBRLR' )
 ( row = 'BFFFFBBRRL' )
 ( row = 'BBFBBBBRRL' )
 ( row = 'BFFFFBFLRL' )
 ( row = 'BBFFFBBLLR' )
 ( row = 'FBFFFFBRLL' )
 ( row = 'FBBBFBBRRL' )
 ( row = 'FFBFBBBRLR' )
 ( row = 'BFFFBFBRLR' )
 ( row = 'BFBFFBFLLR' )
 ( row = 'BBFBFFFRRL' )
 ( row = 'FBBBFBFRRL' )
 ( row = 'BFBFBBFRLL' )
 ( row = 'FBBBFFFLLL' )
 ( row = 'BBFBBFFRLL' )
 ( row = 'BFBBBBFRRL' )
 ( row = 'BBFFFBFLRR' )
 ( row = 'BFFBFFBLRL' )
 ( row = 'FBBBFFBRRL' )
 ( row = 'BBBFFFBRLR' )
 ( row = 'BFBBFBBRRL' )
 ( row = 'FFBBFBBRRL' )
 ( row = 'FBBFBBFRRL' )
 ( row = 'BBFBFFBRRR' )
 ( row = 'BFBBFFFLLL' )
 ( row = 'BFFBBBFLLR' )
 ( row = 'FBBBBFBRRL' )
 ( row = 'BBFBFBFLLL' )
 ( row = 'BFBFBBFLLR' )
 ( row = 'BBFFFBBRLR' )
 ( row = 'BBFFFBBRRR' )
 ( row = 'FFBFFBBRLR' )
 ( row = 'FFBFFBFRRL' )
 ( row = 'BBFFBBBLRR' )
 ( row = 'FBBBFFBLRR' )
 ( row = 'FBBBFBFRLR' )
 ( row = 'FBFBBFBLRR' )
 ( row = 'BFFBBFFLLR' )
 ( row = 'BBFBBFBRLL' )
 ( row = 'FFBFFBBLLL' )
 ( row = 'FBFBBBBRLR' )
 ( row = 'FBFFFFFLRL' )
 ( row = 'BFFBFFFLRL' )
 ( row = 'BBFFFFFRLR' )
 ( row = 'FBBBBBBLLL' )
 ( row = 'BFFBBFFLRL' )
 ( row = 'FFFBBBBLLR' )
 ( row = 'FFFBBFBRRL' )
 ( row = 'BFFBBBFLRR' )
 ( row = 'FBBFFFFLRR' )
 ( row = 'FBBFBBBLLL' )
 ( row = 'FFFBFBFRLR' )
 ( row = 'FFBBBBFRRL' )
 ( row = 'BFBFFBBRLL' )
 ( row = 'FFBBFBFLLL' )
 ( row = 'BBFFFFBRRR' )
 ( row = 'BFFFBFFLLR' )
 ( row = 'FFBFFBFLLR' )
 ( row = 'FFBFFFFRLL' )
 ( row = 'FBFBBBFRRL' )
 ( row = 'BBFFFBFLLL' )
 ( row = 'FBFBFFFLLR' )
 ( row = 'BFBBBFFLLR' )
 ( row = 'BBBFBBFLLL' )
 ( row = 'BBBFBFFRRR' )
 ( row = 'BBFBFBFLRL' )
 ( row = 'FBBFFBBRLR' )
 ( row = 'BBFBFFFLRR' )
 ( row = 'FBFBBFFLRR' )
 ( row = 'BFFBBBFLRL' )
 ( row = 'BFFBFBFRLR' )
 ( row = 'FBFBFFFRRL' )
 ( row = 'BFBBBBBRRR' )
 ( row = 'BFBFBFBLRL' )
 ( row = 'FFFBBFFLRL' )
 ( row = 'BBBFBFBLRR' )
 ( row = 'FFBFFFFLLL' )
 ( row = 'FBBFBFBRRL' )
 ( row = 'BBFBFFFLLL' )
 ( row = 'FFFBFBFLLR' )
 ( row = 'BFFFBFFRRR' )
 ( row = 'FBBBFFFRRL' )
 ( row = 'BFFBBBFRLL' )
 ( row = 'FBBBFFBRLR' )
 ( row = 'FBFBBFBLLL' )
 ( row = 'BBBFFFFLRL' )
 ( row = 'FBFFBFFRRL' )
 ( row = 'BBFFFFFLLL' )
 ( row = 'BBFFFFFLRL' )
 ( row = 'FBFFBFBRRR' )
 ( row = 'FFBFFFBLRL' )
 ( row = 'FBFFFFFRLL' )
 ( row = 'BFBFBFFRRR' )
 ( row = 'BFFBBBBLLR' )
 ( row = 'FFFBFBBRRL' )
 ( row = 'FFBFBFFRRL' )
 ( row = 'FBBBFFFLRR' )
 ( row = 'BBFBFBFRRL' )
 ( row = 'FFBFBFFRRR' )
 ( row = 'BBFFFFBLLL' )
 ( row = 'FBBFBFBRLR' )
 ( row = 'FFBFFBFRRR' )
 ( row = 'BBBFBBBLRL' )
 ( row = 'BFBBFBFRRR' )
 ( row = 'BBBFFFBLRR' )
 ( row = 'FBBBBBFRLR' )
 ( row = 'BFBFFBFRRR' )
 ( row = 'BFBBFFBLRR' )
 ( row = 'FFBFFBBRRR' )
 ( row = 'FBBFFBFRLR' )
 ( row = 'BFBBFFBRRL' )
 ( row = 'BBBFBBBRLR' )
 ( row = 'BBBFBBBLRR' )
 ( row = 'BFBFFBFRLR' )
 ( row = 'FBBBFBBRRR' )
 ( row = 'BFBFFBBLRL' )
 ( row = 'BBFFFBBRLL' )
 ( row = 'FBBFFFFLLR' )
 ( row = 'FFBFBBFLLR' )
 ( row = 'BFFFFFBLLL' )
 ( row = 'BFBFBFFLRR' )
 ( row = 'BFFBBFBRRL' )
 ( row = 'FBBBFFFRLL' )
 ( row = 'FBFBFFBLRL' )
 ( row = 'FFFBFFBRRL' )
 ( row = 'BFFFFFFLLL' )
 ( row = 'FFBBFFFRLL' )
 ( row = 'FFBBBFBLRR' )
 ( row = 'FFBBFFFRRL' )
 ( row = 'FFFBBBFRRR' )
 ( row = 'FFBFFBBRLL' )
 ( row = 'BFFFFFFRLL' )
 ( row = 'BBFFFBFLRL' )
 ( row = 'FFBBFBBLLR' )
 ( row = 'FBFBBBBLLL' )
 ( row = 'FBBFFBFLLR' )
 ( row = 'BFFBBFFRLR' )
 ( row = 'BFFBFFBLLL' )
 ( row = 'FFBBFBBLRR' )
 ( row = 'BBFBBFFRRL' )
 ( row = 'FBBFFBBLRR' )
 ( row = 'FBBFBFFLLL' )
 ( row = 'BBBFFFBRRL' )
 ( row = 'BFBBFFFLRR' )
 ( row = 'BBBFBBBLLL' )
 ( row = 'FBBBFBFRRR' )
 ( row = 'BFFBBBFRRR' )
 ( row = 'BBBFFFBLRL' )
 ( row = 'BFBFFFBLRL' )
 ( row = 'BFFBFBBLRR' )
 ( row = 'BBBFFBBRRR' )
 ( row = 'BBFBBFFRLR' )
 ( row = 'FFFBBBBLRL' )
 ( row = 'BBFFBBBLRL' )
 ( row = 'FFFBFBFLRL' )
 ( row = 'FFBFBBBRRR' )
 ( row = 'BFFFFFFLLR' )
 ( row = 'FBFBBBBRLL' )
 ( row = 'FBBBFFFRRR' )
 ( row = 'BFBFFBBLLL' )
 ( row = 'BFBFBFFLRL' )
 ( row = 'BBFFFBFLLR' )
 ( row = 'FBBFFFBRLR' )
 ( row = 'FFFBBBFLRR' )
 ( row = 'BFFFFBFRRR' )
 ( row = 'BBFFBBFRRL' )
 ( row = 'BFBFFBFLRL' )
 ( row = 'FBBBFBFLLL' )
 ( row = 'FBBFFBFLRL' )
 ( row = 'BBFBBFBLRL' )
 ( row = 'BBBFBBFLLR' )
 ( row = 'BBFBFFBLRR' )
 ( row = 'FBFBBBFRLR' )
 ( row = 'BBBFBFFLLR' )
 ( row = 'FBBFFBBLLL' )
 ( row = 'BBFFFBBLRR' )
 ( row = 'BFBFBBBLLR' )
 ( row = 'BBFFBBBRLR' )
 ( row = 'FFFBFBBLLL' )
 ( row = 'FBFBBFBRLL' )
 ( row = 'BBFBFFBRRL' )
 ( row = 'BBFFFFBRLL' )
 ( row = 'BFBFFBBLRR' )
 ( row = 'BBFBBBFLRL' )
 ( row = 'FBFFFFBRLR' )
 ( row = 'FBFBFFBRRR' )
 ( row = 'BFBBBBFRRR' )
 ( row = 'BBFFBFFLRL' )
 ( row = 'FBFFFFFRRL' )
 ( row = 'FBFFFFBLLR' )
 ( row = 'BFFBBFBLRR' )
 ( row = 'BBBFFBFLLL' )
 ( row = 'FBFFBFBLRR' )
 ( row = 'FFBBFBFRLR' )
 ( row = 'BBFBFBFRRR' )
 ( row = 'BBFBFBFRLL' )
 ( row = 'FBBBFBBLRL' )
 ( row = 'BBBFFFFRRR' )
 ( row = 'FBBBBBFLLL' )
 ( row = 'BBFFBBBRRR' )
 ( row = 'BFFFFBBRLR' )
 ( row = 'FFBBFBBRLL' )
 ( row = 'BBFBFBBLRL' )
 ( row = 'BFFBFFBLRR' )
 ( row = 'FBBFFFBRLL' )
 ( row = 'FFFBBFBRLR' )
 ( row = 'BBBFFBFLLR' )
 ( row = 'BBFFFFBRLR' )
 ( row = 'BFFBBFFRRR' )
 ( row = 'FFBFFBFRLR' )
 ( row = 'FBBFFFFRRL' )
 ( row = 'BFBBBFFRRL' )
 ( row = 'BFFBFBFLRR' )
 ( row = 'FBBBFBBRLL' )
 ( row = 'FBFFBBFRRL' )
 ( row = 'BFFFBFFLRL' )
 ( row = 'FFFBBFFRRR' )
 ( row = 'BBFFFFBLLR' )
 ( row = 'BFFBFBBRLL' )
 ( row = 'BFFFBFBLLR' )
 ( row = 'BBBFBBFLRR' )
 ( row = 'FFBFBFFLRL' )
 ( row = 'BFFBFFBRLL' )
 ( row = 'FBBBFBBLLL' )
 ( row = 'BFBBFBFLLL' )
 ( row = 'FBFBBFFRLL' )
 ( row = 'BFBFFFFLRR' )
 ( row = 'FFBBFFBRRL' )
 ( row = 'FBFBFBBLRR' )
 ( row = 'FFFBFBBRLL' )
 ( row = 'FBBFFBBRRR' )
 ( row = 'FBFBBBBLLR' )
 ( row = 'FBBFBFBLRR' )
 ( row = 'BFFFFFBRLR' )
 ( row = 'BFBBFBBRRR' )
 ( row = 'BFBBBBBLLR' )
 ( row = 'FFFBBFBLLR' )
 ( row = 'FBBFFBBLRL' )
 ( row = 'FFFBFBFRRL' )
 ( row = 'BFFFFBFLLL' )
 ( row = 'FBBBBBBRLR' )
 ( row = 'FFBBBFFLLR' )
 ( row = 'BFBBBBFRLL' )
 ( row = 'FFBFBFFLRR' )
 ( row = 'BFFBBFBLLR' )
 ( row = 'FBFBFBBRLR' )
 ( row = 'BBBFFFFLLR' )
 ( row = 'FFBBBBFLLR' )
 ( row = 'BFBBFFBRRR' )
 ( row = 'BBFBBFFLLL' )
 ( row = 'BFBBBBFRLR' )
 ( row = 'FFFBBFFLRR' )
 ( row = 'FFBFBBBRLL' )
 ( row = 'BFBBFFBLRL' )
 ( row = 'BFFBBBFRRL' )
 ( row = 'FFFBFBFLRR' )
 ( row = 'BFFFBBBRLL' )
 ( row = 'BBBFBFBRLR' )
 ( row = 'FBFFBBBRRL' )
 ( row = 'FFBBBBFLRR' )
 ( row = 'BFBBFBFRLL' )
 ( row = 'BFBBBFFRRR' )
 ( row = 'BBBFFBFRRL' )
 ( row = 'BBFBFFFRLL' )
 ( row = 'FFBFBFBRLL' )
 ( row = 'FBBFBBFLRL' )
 ( row = 'FFBBFFFRLR' )
 ( row = 'FBBFFBBRRL' )
 ( row = 'FBBBBFBLRR' )
 ( row = 'BFFFBFFRRL' )
 ( row = 'BFFFFBFRRL' )
 ( row = 'BFBFBFBRLL' )
 ( row = 'BFFBFBFRLL' )
 ( row = 'FBFBBFBRRL' )
 ( row = 'FFFBBFFRLL' )
 ( row = 'BFFFFBFLRR' )
 ( row = 'BFBBBBFLRR' )
 ( row = 'BBFBFBBRRR' )
 ( row = 'FBBBBBFRRR' )
 ( row = 'BFBBBFFLLL' )
 ( row = 'BFBBBFBRRR' )
 ( row = 'FBFBBFFRRL' )
 ( row = 'BBFBBBBLLR' )
 ( row = 'BFBBFFBLLR' )
 ( row = 'BFBBFBFLRR' )
 ( row = 'FBFBBFFLLR' )
 ( row = 'BFBFFFFLLR' )
 ( row = 'BFFFBFBRRR' )
 ( row = 'FBFBBFFLLL' )
 ( row = 'FBFBFBFRLL' )
 ( row = 'BBFBFFBLRL' )
 ( row = 'BBBFFFFRRL' )
 ( row = 'BFFFFBBLLR' )
 ( row = 'FFFBBBBRLR' )
 ( row = 'BFFFBFFLLL' )
 ( row = 'BFFFBFFRLL' )
 ( row = 'BFBFFBFRRL' )
 ( row = 'FFBFBFBLRL' )
 ( row = 'FFBFFFFRLR' )
 ( row = 'BFFBBBFLLL' )
 ( row = 'FBFFFBFRRL' )
 ( row = 'BBFFBBBLLR' )
 ( row = 'BFFBFFFRRR' )
 ( row = 'BFBFFFBRLL' )
 ( row = 'FFBFFBFLLL' )
 ( row = 'BBFBBFBRRL' )
 ( row = 'BBFBFBBRRL' )
 ( row = 'BFBBFFBRLR' )
 ( row = 'BBFFFBFRLR' )
 ( row = 'BBBFFFBLLR' )
 ( row = 'BFFBBFBRLR' )
 ( row = 'BBFBFBBLLR' )
 ( row = 'BBFFBBBRRL' )
 ( row = 'FFFBBBFLRL' )
 ( row = 'BFFBFFFRLL' )
 ( row = 'FBFBFFFLRL' )
 ( row = 'FBFBBBFLRL' )
 ( row = 'BFBFFBFLLL' )
 ( row = 'BFBFFFBLRR' )
 ( row = 'BFBFFFFLRL' )
 ( row = 'FBBBBFFLRL' )
 ( row = 'BFFBFFBRRL' )
 ( row = 'BFBBBBBLRL' )
 ( row = 'BFBFBBBRLL' )
 ( row = 'BBBFFBBLLL' )
 ( row = 'FBBFBBBRRR' )
 ( row = 'FFBBFFFLRR' )
 ( row = 'FBBFFFFLRL' )
 ( row = 'BBBFBFFLRR' )
 ( row = 'BFBFBBFRLR' )
 ( row = 'BBFBBFBRLR' )
 ( row = 'FBFBFFBLLR' )
 ( row = 'BFBFBBBRRL' )
 ( row = 'BBFFBFBLLL' )
 ( row = 'FBFFFFBLRL' )
 ( row = 'FFBFBBFLLL' )
 ( row = 'FBFFBFFLRR' )
 ( row = 'BFFFFBFLLR' )
 ( row = 'FFBFFFBRLL' )
 ( row = 'FBFBBBBRRL' )
 ( row = 'FFBFFFBLLL' )
 ( row = 'BFBBFFBLLL' )
 ( row = 'FFBBFFFLRL' )
 ( row = 'FBFFFBFLRL' )
 ( row = 'FBBBBBBLRL' )
 ( row = 'BBBFFBBLRR' )
 ( row = 'FBFBFBFRLR' )
 ( row = 'BFBFBFFRLL' )
 ( row = 'BFFFBBBLRL' )
 ( row = 'BFFFBFBRRL' )
 ( row = 'BBFFBBBLLL' )
 ( row = 'FBFFFBBLRR' )
 ( row = 'BFFBFBFRRL' )
 ( row = 'BFFFBFBLLL' )
 ( row = 'FBFBBFBRRR' )
 ( row = 'BFBFBBFRRR' )
 ( row = 'BBBFBFFRLL' )
 ( row = 'FBBFFBFLRR' )
 ( row = 'FFBBBFBLLL' )
 ( row = 'BFBBBFFLRR' )
 ( row = 'FFBBBFFRLR' )
 ( row = 'BFFFBFFLRR' )
 ( row = 'FFBBBFFRLL' )
 ( row = 'FFBFBFBLLR' )
 ( row = 'FBFFBFBLRL' )
 ( row = 'FBFFFBBRRR' )
 ( row = 'FFBFFFBLLR' )
 ( row = 'FFBFFFBRLR' )
 ( row = 'BFBFFBBLLR' )
 ( row = 'BFBBBFBRLR' )
 ( row = 'BFFBBBBLRL' )
 ( row = 'BFBFFFBRRL' )
 ( row = 'FBFFFBBLLL' )
 ( row = 'BFFFFFFRRL' )
 ( row = 'BBBFFBFLRL' )
 ( row = 'FFFBBFBLRR' )
 ( row = 'FBFFBBFRLL' )
 ( row = 'BBFFBFBLRL' )
 ( row = 'BBFBBFFLLR' )
 ( row = 'FBBBFBFLRL' )
 ( row = 'BBBFFBBLLR' )
 ( row = 'FBBFFFBLRR' )
 ( row = 'BFFFBBBRRL' )
 ( row = 'BFBBFFFRLR' )
 ( row = 'FFBFBBFLRL' )
 ( row = 'BFFBBBBLLL' )
 ( row = 'FBBBBBBRRL' )
 ( row = 'FBFFBFFRLR' )
 ( row = 'FBFFBFFLRL' )
 ( row = 'BFFBBFBLRL' )
 ( row = 'FBFFBBFLLR' )
 ( row = 'BBFFFFBLRR' )
 ( row = 'FBBFFBFRRR' )
 ( row = 'BFFBFFBRLR' )
 ( row = 'FBBBBBFLRR' )
 ( row = 'BFBFFBFRLL' )
 ( row = 'FBFFBFBLLR' )
 ( row = 'FBFBBFBRLR' )
 ( row = 'BBBFFFFRLR' )
 ( row = 'FFFBFFBRRR' )
 ( row = 'BBFFFBFRRL' )
 ( row = 'BFBFBBFLRL' )
 ( row = 'FBBFBBFRLL' )
 ( row = 'FFFBBBBLRR' )
 ( row = 'BFBBFBBLLR' )
 ( row = 'BFBFFFBLLR' )
 ( row = 'FBBFBBBRRL' )
 ( row = 'BFBFFFFLLL' )
 ( row = 'FBFFFBFLLL' )
 ( row = 'BBFFFBFRRR' )
 ( row = 'FBFFBBBRLL' )
 ( row = 'FBFFBFBRLL' )
 ( row = 'FFBBFBFLRR' )
 ( row = 'FFFBBBFRRL' )
 ( row = 'FBBFBFFLRR' )
 ( row = 'FBFFBBBLRL' )
 ( row = 'BFBBFFFRRR' )
 ( row = 'FBBFBFBRLL' )
 ( row = 'FBFFBBBLRR' )
 ( row = 'FFBBBFBLLR' )
 ( row = 'BFBFBFFRLR' )
 ( row = 'BFFBFBBLLR' )
 ( row = 'FBFFBFBLLL' )
 ( row = 'FBBBFBFLLR' )
 ( row = 'BFFFFBBLLL' )
 ( row = 'FFBBBBFLRL' )
 ( row = 'BFBBFBFLLR' )
 ( row = 'BFFBFFBRRR' )
 ( row = 'FBFBBFFRLR' )
 ( row = 'FBFBBBFLRR' )
 ( row = 'FBBFFFBRRL' )
 ( row = 'BBFFBFBRLR' )
 ( row = 'BFBFFBBRRR' )
 ( row = 'BBFFBFFLLR' )
 ( row = 'BBBFFFFLLL' )
 ( row = 'FFBFBFFRLL' )
 ( row = 'BFFBFBFRRR' )
 ( row = 'FBBBBFBLLL' )
 ( row = 'FBFBFBFLRR' )
 ( row = 'FBFBBFBLLR' )
 ( row = 'BFFFBBBLLL' )
 ( row = 'FBBFFFBRRR' )
 ( row = 'FBBBBFFRRR' )
 ( row = 'FFFBBFFRRL' )
 ( row = 'FFBBBFFRRR' )
 ( row = 'FBBFBBFLLL' )
 ( row = 'BBBFBFFRRL' )
 ( row = 'BBFFBFBRLL' )
 ( row = 'FBFFFFBLRR' )
 ( row = 'FFBFFBFLRR' )
 ( row = 'FBBBFBFLRR' )
 ( row = 'BFBBBBFLRL' )
 ( row = 'FFBBFBFLLR' )
 ( row = 'FFBBFFBRLR' )
 ( row = 'BFBFBBBRLR' )
 ( row = 'BFBFFBFLRR' )
 ( row = 'FBBFBFBLRL' )
 ( row = 'FFFBBFBRRR' )
 ( row = 'BFFFFFFLRR' )
 ( row = 'BBFBFFBRLR' )
 ( row = 'FBBBFFFRLR' )
 ( row = 'FBBFBFFRLL' )
 ( row = 'FBFBBBFRRR' )
 ( row = 'FBFFBBFRRR' )
 ( row = 'BBFBBFBLLR' )
 ( row = 'FBFFFBBRRL' )
 ( row = 'BFBFBBFLLL' )
 ( row = 'FBFFFBFRRR' )
 ( row = 'FBFBFBBRLL' )
 ( row = 'FFBBFFBRLL' )
 ( row = 'FBBBFBBRLR' )
 ( row = 'FBBBFBBLLR' )
 ( row = 'BFBBFBFRRL' )
 ( row = 'FBFFBBFRLR' )
 ( row = 'FBBFBFFRRL' )
 ( row = 'BFBFBBBLLL' )
 ( row = 'BFBBBFBLRL' )
 ( row = 'BFFFFBBLRR' )
 ( row = 'BFBBBFFLRL' )
 ( row = 'FBFFFBBRLR' )
 ( row = 'FFBFFFFRRR' )
 ( row = 'FBBFBFFLRL' )
 ( row = 'BFBFFFFRRL' )
 ( row = 'BFBBFFFRRL' )
 ( row = 'BFBFBFBLLR' )
 ( row = 'BBFFFBFRLL' )
 ( row = 'BFBBBBFLLL' )
 ( row = 'BFFBBBBRLR' )
 ( row = 'FBBBBBBRRR' )
 ( row = 'BFFFFBBRLL' )
 ( row = 'BBBFBBBRRL' )
 ( row = 'BFFBFFFRRL' )
 ( row = 'FBFBBBBLRL' )
 ( row = 'BBFBBFBLLL' )
 ( row = 'FBFFFBFRLR' )
 ( row = 'FBFFFBFLRR' )
 ( row = 'BBBFBBFRLR' )
 ( row = 'FFBBBBFRRR' )
 ( row = 'FBFBFBFLLR' )
 ( row = 'FBBBFFFLRL' )
 ( row = 'FFBFBFBLLL' )
 ( row = 'BFFBFBFLRL' )
 ( row = 'BFFBFBBRRR' )
 ( row = 'FBBFFFFLLL' )
 ( row = 'BBFBBBBLRL' )
 ( row = 'FFFBFBFRLL' )
 ( row = 'FFBBBFBRLR' )
 ( row = 'BFBBBFBLLR' )
 ( row = 'BFBBBBBRLL' )
 ( row = 'FBFFBBFLRR' )
 ( row = 'BFBBBBBLLL' )
 ( row = 'FBBFBFFRRR' )
 ( row = 'FBBBBBBLRR' )
 ( row = 'BFBBFBFRLR' )
 ( row = 'BBFFFFFLLR' )
 ( row = 'BBFBBFBLRR' )
 ( row = 'BFFFFFBRLL' )
 ( row = 'FFBBFBBLRL' )
 ( row = 'FBFBFBBLLR' )
 ( row = 'BBFBFBBRLL' )
 ( row = 'BFFFFBFRLL' )
 ( row = 'FFFBBFFLLR' )
 ( row = 'BBBFBFFRLR' )
 ( row = 'BFBBBFFRLL' )
 ( row = 'FBBFBBFLRR' )
 ( row = 'BFBFBFBLLL' )
 ( row = 'BFFBBBBRRL' )
 ( row = 'BBFBBBFRRL' )
 ( row = 'FFBBBBBLRR' )
 ( row = 'FFBBBFBRLL' )
 ( row = 'BFBBFBBRLL' )
 ( row = 'FBBBFBBLRR' )
 ( row = 'FFFBFBBLRR' )
 ( row = 'BBFBFFFRRR' )
 ( row = 'BFBFBFFLLR' )
 ( row = 'BFFFBFBRLL' )
 ( row = 'BBFFBFFRLL' )
 ( row = 'FFBFFBFLRL' )
 ( row = 'FBBBBFFRLL' )
 ( row = 'FFBFBFBRRR' )
 ( row = 'BBFBBBBLLL' )
 ( row = 'BBFFBFBLRR' )
 ( row = 'FFBBFFBRRR' )
 ( row = 'FBBFFFFRRR' )
 ( row = 'FFBFFBBLLR' )
 ( row = 'FBFBFBBRRR' )
 ( row = 'FFFBFBFLLL' )
 ( row = 'FFBBFBFRRL' )
 ( row = 'BFFFBBFRRL' )
 ( row = 'FBFBFFBRRL' )
 ( row = 'FFBBFFFLLR' )
 ( row = 'BFFBBBBLRR' )
 ( row = 'BFFFFFBRRL' )
 ( row = 'BBFBBBBRLL' )
 ( row = 'BFFFBBBLLR' )
 ( row = 'BFBFFFFRRR' )
 ( row = 'BBFBFFBLLR' )
 ( row = 'FBFFFFFLRR' )
 ( row = 'FBBBBBFRLL' )
 ( row = 'BFFBFBBLLL' )
 ( row = 'BBBFBBFLRL' )
 ( row = 'BBFFFBBRRL' )
 ( row = 'FBFBBBFLLR' )
 ( row = 'FFBBBBBRRL' )
 ( row = 'BFFFFFBLRR' )
 ( row = 'FFBFBBFRLL' )
 ( row = 'FBBFFFBLLL' )
 ( row = 'FFBBFBFRRR' )
 ( row = 'FBFFBBFLLL' )
 ( row = 'FBBFBBFRLR' )
 ( row = 'BFFFFBBRRR' )
 ( row = 'BFFFBBFLRR' )
 ( row = 'FBFFFFBRRL' )
 ( row = 'BFBFBBBLRR' )
 ( row = 'BBBFFBBRLL' )
 ( row = 'BBFFBBFLLL' )
 ( row = 'BFBFBBFRRL' )
 ( row = 'FBBFBFBLLL' )
 ( row = 'FFBFFBBRRL' )
 ( row = 'FBFBBFFRRR' )
 ( row = 'BFBBBFBRRL' )
 ( row = 'FFBFFBBLRL' )
 ( row = 'FFBBBBBLRL' )
 ( row = 'FFFBBFBLRL' )
 ( row = 'FBBBBFBRLL' )
 ( row = 'FBBBFFBLLL' )
 ( row = 'BBFFFBBLLL' )
 ( row = 'BFFFFFFRRR' )
 ( row = 'BFBBBBBRRL' )
 ( row = 'FBFBFBFRRL' )
 ( row = 'FBBBFFBRLL' )
 ( row = 'BBBFBFBLRL' )
 ( row = 'FBBBBFFRRL' )
 ( row = 'FBFFBFFRRR' )
 ( row = 'FBFFBFFRLL' )
 ( row = 'FBFBFFFLLL' )
 ( row = 'BBFBBFBRRR' )
 ( row = 'FFBBFFBLLR' )
 ( row = 'BBBFBBFRRR' )
 ( row = 'BBBFFBFRLR' )
 ( row = 'FFBFFFFRRL' )
 ( row = 'BFFFBFBLRR' )
 ( row = 'FBBBFFBRRR' )
 ( row = 'FFFBBBFLLL' )
 ( row = 'FBFFFBBRLL' )
 ( row = 'BBFBBFFLRL' )
 ( row = 'FFBFBBBLRR' )
 ( row = 'FFBBBFFLRR' )
 ( row = 'FFBBBBFRLL' )
 ( row = 'FFFBFBBLRL' )
 ( row = 'BBBFFBBRLR' )
 ( row = 'BBBFFFFRLL' )
 ( row = 'FBBFFBFLLL' )
 ( row = 'BFBBBBFLLR' )
 ( row = 'FBFBFBFLLL' )
 ( row = 'FBFFFBFLLR' )
 ( row = 'BFBBFFFLRL' )
 ( row = 'FFBFBFFRLR' )
 ( row = 'BFFBFBBRRL' )
 ( row = 'FBFFFFFLLL' )
 ( row = 'BFFFFBBLRL' )
 ( row = 'BFBBBFBLLL' )
 ( row = 'BBFFBFBRRL' )
 ( row = 'BBFBBBFRRR' )
 ( row = 'FBBBFFFLLR' )
 ( row = 'FFFBBBFRLL' )
 ( row = 'BFBBBBBLRR' )
 ( row = 'BBFFFBBLRL' )
 ( row = 'BBFBFBBLRR' )
 ( row = 'BBFBFBBRLR' )
 ( row = 'FBBBBFFRLR' )
 ( row = 'BBBFBFBRRR' )
 ( row = 'BBBFFFBRRR' )
 ( row = 'FBBFBBBRLL' )
 ( row = 'FBFBFFFLRR' )
 ( row = 'FFBBBFFLRL' )
 ( row = 'FBBBBFBRLR' )
 ( row = 'BFFBFBFLLL' )
 ( row = 'BFBFBFFRRL' )
 ( row = 'BFBFFFFRLL' )
 ( row = 'BBBFFBBRRL' )
 ( row = 'FBBBFBFRLL' )
 ( row = 'BFBBFBBLRR' )
 ( row = 'BBBFBBBRLL' )
 ( row = 'BBBFFBFLRR' )
 ( row = 'FBBFFFBLLR' )
 ( row = 'BFBFBBBRRR' )
 ( row = 'BBBFBBBRRR' )
 ( row = 'FBFFBBBLLR' )
 ( row = 'FBFBFFBRLR' )
 ( row = 'FFBFFFBRRR' )
 ( row = 'FBFFFBBLLR' )
 ( row = 'BFFBFFFLLL' )
 ( row = 'FBFBFFBLLL' )
 ( row = 'FBFBBBFLLL' )
 ( row = 'FFBFBFFLLL' )
 ( row = 'FFBFBBFRLR' )
 ( row = 'FFBFFFFLRR' )
 ( row = 'FFBBFBBRRR' )
 ( row = 'FFBFBBBRRL' )
 ( row = 'BFBBBFBRLL' )
 ( row = 'BBBFFFBRLL' )
 ( row = 'FBFFBFFLLL' )
 ( row = 'BBFFBFFRRR' )
 ( row = 'FFFBBFBRLL' )
 ( row = 'BFFBFFFLRR' )
 ( row = 'FBBBBBFRRL' )
 ( row = 'FFBFBBFRRL' )
 ( row = 'BBFFFFFRRR' )
 ( row = 'BFFFFFBLLR' )
 ( row = 'FBFBFFBRLL' )
 ( row = 'BFBFFFBRLR' )
 ( row = 'FFBBFBFRLL' )
 ( row = 'BBFBBBFRLR' )
 ( row = 'FBFBBFBLRL' )
 ( row = 'FFBFFFBLRR' )
 ( row = 'FBFBFFFRLR' )
 ( row = 'BFFBBFFRLL' )
 ( row = 'FBBFBFBRRR' )
 ( row = 'FFBBBBBRRR' )
 ( row = 'FBBFFBBLLR' )
 ( row = 'FFFBBBBRRL' )
 ( row = 'FFFBBBBRLL' )
 ( row = 'BBFFFFFRLL' )
 ( row = 'BBFBBBBRRR' )
 ( row = 'BFFBBFBRRR' )
 ( row = 'BFBBFBBLRL' )
 ( row = 'BBFBBBBRLR' )
 ( row = 'FBBBFFBLLR' )
 ( row = 'FBBFBBBLRR' )
 ( row = 'FFBBBFFRRL' )
 ( row = 'BBFBBBBLRR' )
 ( row = 'FBBFBBFRRR' )
 ( row = 'FFBBFBFLRL' )
 ( row = 'FBBFBBBLRL' )
 ( row = 'FBFFFFBRRR' )
 ( row = 'FFBBFFFLLL' )
 ( row = 'BBBFFFFLRR' )
 ( row = 'FBFBBFFLRL' )
 ( row = 'FFFBBFFRLR' )
 ( row = 'FBBBBFFLLR' )
 ( row = 'BFBFBFBLRR' )
 ( row = 'FBBBBFFLRR' )
 ( row = 'BBFBFFFLLR' )
 ( row = 'FFBBFBBRLR' )
 ( row = 'BFFBBFFLRR' )
 ( row = 'FFBFFBFRLL' )
 ( row = 'BBFBBFFLRR' )
 ( row = 'BBFBFBFLLR' )
 ( row = 'BBFBFFBRLL' )
 ( row = 'FFBFBFBRRL' )
 ( row = 'BFBBFFBRLL' )
 ( row = 'FFFBBBFLLR' )
 ( row = 'FBFFBBBLLL' )
 ( row = 'FFFBBBFRLR' )
 ( row = 'FFBBFFBLLL' )
 ( row = 'FFBBBBFRLR' )
 ( row = 'BBFFFFBLRL' )
 ( row = 'FBBBBFBRRR' )
 ( row = 'BFFFBBFLLL' )
 ( row = 'BBBFBBBLLR' )
 ( row = 'BBFBFFFRLR' )
 ( row = 'FBFFFBFRLL' )
 ( row = 'BBFBBBFLRR' )
 ( row = 'BBFBFFFLRL' )
 ( row = 'FFBFFFFLLR' )
 ( row = 'FBBFBBBLLR' )
 ( row = 'BBFFBBFRRR' )
 ( row = 'BBBFBFBLLL' )
 ( row = 'FBBFBFFRLR' )
 ( row = 'FBFFBBFLRL' )
 ( row = 'FFFBBBBLLL' )
 ( row = 'BFBFFFBLLL' )
 ( row = 'FBBFBFBLLR' )
 ( row = 'BBFBFFBLLL' )
 ( row = 'FFFBBFBLLL' )
 ( row = 'BFFBFBFLLR' )
 ( row = 'FFBFBFBRLR' )
 ( row = 'BFFBFBBRLR' )
 ( row = 'FFBFBFBLRR' )
 ( row = 'FBFFFBBLRL' )
 ( row = 'BBFFBFBLLR' )
 ( row = 'BFBFFFBRRR' )
 ( row = 'BFFFFBFRLR' )
 ( row = 'FBFBFBBLRL' )
 ( row = 'BFFFBFFRLR' )
 ( row = 'BBFFBBFRLL' )
 ( row = 'BFBBBBBRLR' )
 ( row = 'BFBFBFBRRR' )
 ( row = 'BBFFBBFLRR' )
 ( row = 'FFBBBBBLLR' )
 ( row = 'FBFFFFFLLR' )
 ( row = 'FBFBFBFLRL' )
 ( row = 'FBFFBBBRLR' )
 ( row = 'BBBFBFBLLR' )
 ( row = 'BFFBFFBLLR' )
 ( row = 'FBBBBFFLLL' )
 ( row = 'BFBBFFFLLR' )
 ( row = 'FFFBFBFRRR' )
 ( row = 'FFBFFFBRRL' )
 ( row = 'FBBBBBBLLR' )
 ( row = 'FBBFFFBLRL' )
 ( row = 'BBBFFBFRLL' )
 ( row = 'FBFFBFBRRL' )
 ( row = 'BBFFFFFRRL' ) ).

DATA: lv_cur_row_min     TYPE f VALUE 0,
      lv_cur_row_max     TYPE f VALUE 127,
      lv_cur_col_min     TYPE f VALUE 0,
      lv_cur_col_max     TYPE f VALUE 7,
      lv_highest_seat_id TYPE i VALUE 0,
      lv_seat_id         TYPE i VALUE 0.

LOOP AT lv_input INTO wa_input.
  lv_cur_row_min = 0.
  lv_cur_row_max = 127.

  " Test purpose
  "wa_input-row = 'BBFFBBFRLL'.

  DO strlen( wa_input-row ) TIMES. " Do it normally 10 times.
    DATA(lv_current_offset) = sy-index - 1.
    DATA(lv_current_signal) = wa_input-row+lv_current_offset(1).

    CASE lv_current_signal.
        " Row calculation
      WHEN 'F'. " Lower half 0 - 63
        lv_cur_row_max = floor( ( lv_cur_row_max + lv_cur_row_min ) / 2 ).
      WHEN 'B'. " Upper half 64 - 127
        lv_cur_row_min = ceil( ( lv_cur_row_max + lv_cur_row_min ) / 2 ).

        " Col calculation
      WHEN 'L'. " Lower half 0 - 63
        lv_cur_col_max = floor( ( lv_cur_col_max + lv_cur_col_min ) / 2 ).
      WHEN 'R'. " Upper half 64 - 127
        lv_cur_col_min = ceil( ( lv_cur_col_max + lv_cur_col_min ) / 2 ).
    ENDCASE.
  ENDDO.
  " Calculate the unique seat id.
  lv_seat_id = lv_cur_row_min * 8 + lv_cur_col_min.

  IF lv_seat_id > lv_highest_seat_id.
    lv_highest_seat_id = lv_seat_id.
  ENDIF.
ENDLOOP.
WRITE: 'Highest seat id: ' && lv_highest_seat_id.
